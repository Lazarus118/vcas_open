@model VCAS.Models.VCAS_issuedChecks
@using MvcSiteMapProvider.Web.Html;
@{
    ViewBag.Title = "Issue Payments";
}

<!-- Quick Links ============================================= -->
<div>
    <h6 style="font-weight: 700;" class="fg-grayBlue">:: Quick Links</h6>
    @Html.MvcSiteMap().Menu(false, true, true)
</div>


<a href="@Url.Action("Entry", "issuedChecks")" class="image-button primary m-1" style="text-decoration: none !important;">
    <span class="mif-pencil icon"></span>
    <span class="caption">Entries</span>
    <span class="badge bg-red fg-white">@ViewBag.entries</span>
</a>
<a href="@Url.Action("Approvals", "issuedChecks")" class="image-button success m-1" style="text-decoration: none !important;">
    <span class="mif-chevron-thin-right icon"></span>
    <span class="caption">Pending Approvals</span>
    <span class="badge bg-red fg-white">@ViewBag.pending_approvals</span>
</a>
<a href="@Url.Action("Delivery", "issuedChecks")" class="image-button m-1" style="text-decoration: none !important;">
    <span class="mif-chevron-thin-right icon"></span>
    <span class="caption">Pending Delivery</span>
    <span class="badge bg-red fg-white">@ViewBag.pending_delivery</span>
</a>
<span> | </span>
<a href="@Url.Action("DownloadFile_Payments", "issuedChecks")" class="image-button m-1" style="text-decoration: none !important;">
    <span class="mif-download icon"></span>
    <span class="caption">Select & Download File</span>
</a>
<a href="@Url.Action("BulkCreate", "issuedChecks")" class="image-button m-1" style="text-decoration: none !important;">
    <span class="mif-upload icon"></span>
    <span class="caption">Bulk Upload</span>
</a>
@using (Html.BeginForm("Create", "issuedChecks", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div style="background: #FFFFFF; border-radius: 10px; width: 100%; padding: 5px;">
        <div class="row">
            <div class="cell-3">
                <h3 class="fg-gray">Issue Payments</h3>
            </div>
            <div class="cell-9">
                @Html.EditorFor(model => model.issuer, new { htmlAttributes = new { @class = "metro-input input-small", data_role = "input", data_prepend = "Issuer:", @Value = ViewBag.issuer, @Readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.issuer, "", new { @class = "fg-magenta" })
            </div>
        </div><br />


        <div id="smartwizard">
            <ul class="nav">
                <li>
                    <a class="nav-link" href="#step-1">
                        Entry
                    </a>
                </li>
                <li>
                    <a class="nav-link" href="#step-2">
                        Pending Approvals
                    </a>
                </li>
                <li>
                    <a class="nav-link" href="#step-3">
                        Pending Delivery
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div id="step-1" class="tab-pane" role="tabpanel">
                    <div class="remark">
                        <h6 class="fg-gray">Debit Account:</h6>
                        @Html.DropDownList("FK_debitAccountsId", null, "-- select Account --", htmlAttributes: new { data_role = "select" })
                        @Html.ValidationMessageFor(model => model.FK_debitAccountsId, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">Expense:</h6>
                        @Html.DropDownList("FK_expensesId", null, "-- select Expense --", htmlAttributes: new { data_role = "select" })
                        @Html.ValidationMessageFor(model => model.FK_expensesId, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">Check Number:</h6>
                        @Html.EditorFor(model => model.checkNo, new { htmlAttributes = new { data_role = "input", data_prepend = "CheckNo:" } })
                        @Html.ValidationMessageFor(model => model.checkNo, "", new { @class = "fg-magenta" })
                    </div>
                    <div class="remark">
                        <h6 class="fg-gray">Date:</h6>
                        @Html.EditorFor(model => model.datetime, new { htmlAttributes = new { data_role = "calendarpicker" } })
                        @Html.ValidationMessageFor(model => model.datetime, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">Location:</h6>
                        @Html.DropDownList("FK_location", null, htmlAttributes: new { data_role = "select" })
                        @Html.ValidationMessageFor(model => model.FK_location, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">Issuing Amount:</h6>
                        @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @Type = "number", min = "1", step = "0.01", data_role = "input", data_prepend = "Amount:" } })
                        @Html.ValidationMessageFor(model => model.amount, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">Receiver:</h6>
                        @Html.EditorFor(model => model.receiverName, new { htmlAttributes = new { data_role = "input", data_prepend = "Receiver Name:" } })
                        @Html.ValidationMessageFor(model => model.receiverName, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">Receiver's ID:</h6>
                        @Html.EditorFor(model => model.receiverID, new { htmlAttributes = new { data_role = "input", data_prepend = "ReceiverID:" } })
                        @Html.ValidationMessageFor(model => model.receiverID, "", new { @class = "fg-magenta" })
                        <h6 class="fg-gray">ID Type:</h6>
                        @Html.DropDownList("FK_receiverID_TypesId", null, htmlAttributes: new { data_role = "select" })
                        @Html.ValidationMessageFor(model => model.FK_receiverID_TypesId, "", new { @class = "fg-magenta" })
                        <br />
                        <div class="form-group files">
                            <h6 class="fg-gray">Attach Receiver's ID (Optional):</h6><br />
                            <input type="file" class="form-control" name="attach_ID" id="attach_ID">
                            @Html.ValidationMessageFor(model => model.attach_ID, "", new { @class = "text-danger" })
                        </div>


                        @Html.HiddenFor(model => model.signature)
                        @Html.ValidationMessageFor(model => model.signature, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.approver)
                        @Html.ValidationMessageFor(model => model.approver, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.approval)
                        @Html.ValidationMessageFor(model => model.approval, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.pending_approval)
                        @Html.ValidationMessageFor(model => model.pending_approval, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.auth_signature)
                        @Html.ValidationMessageFor(model => model.auth_signature, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.complete, new { @Value = false })
                        @Html.ValidationMessageFor(model => model.complete, "", new { @class = "text-danger" })

                        @Html.HiddenFor(model => model.attach_Receipt)
                        @Html.ValidationMessageFor(model => model.attach_Receipt, "", new { @class = "text-danger" })

                    </div>
                    <div class="remark">
                        <div class="form-group files">
                            <h6 class="fg-gray">Attach Voucher, Invoice, Purchase Order e.t.c (Optional):</h6><br />
                            <input type="file" class="form-control" name="attach_Doc" id="attach_Doc">
                            @Html.ValidationMessageFor(model => model.attach_Doc, "", new { @class = "text-danger" })
                        </div>

                        <br />
                        <input type="submit" value="Save" class="button yellow" style="width: 100%; margin-left: 5px;" />
                    </div>

                </div>
                <div id="step-2" class="tab-pane" role="tabpanel"></div>
                <div id="step-3" class="tab-pane" role="tabpanel"></div>
            </div>


        </div>

    </div>
}


<!-- SMARTWIZARD Module ------------- -->
@Scripts.Render("~/bundles/smartwizard")
<script type="text/javascript">
    // Smartwizard module
    // ============================
    $('#smartwizard').smartWizard({
        selected: 0, // Initial selected step, 0 = first step
        hiddenSteps: [2, 3], // Hidden steps
        theme: 'dots', // theme for the wizard, related css need to include for other than default theme
        justified: true, // Nav menu justification. true/false
        darkMode: false, // Enable/disable Dark Mode if the theme supports. true/false
        autoAdjustHeight: false, // Automatically adjust content height
        cycleSteps: true, // Allows to cycle the navigation of steps
        backButtonSupport: false, // Enable the back button support
        enableURLhash: true, // Enable selection of the step based on url hash
        transition: {
            animation: 'none', // Effect on navigation, none/fade/slide-horizontal/slide-vertical/slide-swing
            speed: '400', // Transion animation speed
            easing: '' // Transition animation easing. Not supported without a jQuery easing plugin
        },
        toolbarSettings: {
            toolbarPosition: 'top', // none, top, bottom, both
            toolbarButtonPosition: 'right', // left, right, center
            showNextButton: false, // show/hide a Next button
            showPreviousButton: false, // show/hide a Previous button
            toolbarExtraButtons: [] // Extra buttons to show on toolbar, array of jQuery input/buttons elements
        },
        anchorSettings: {
            anchorClickable: true, // Enable/Disable anchor navigation
            enableAllAnchors: false, // Activates all anchors clickable all times
            markDoneStep: false, // Add done state on navigation
            markAllPreviousStepsAsDone: false, // When a step selected by url hash, all previous steps are marked done
            removeDoneStepOnNavigateBack: false, // While navigate back done step after active step will be cleared
            enableAnchorOnDoneStep: false // Enable/Disable the done steps navigation
        },
        keyboardSettings: {
            keyNavigation: true, // Enable/Disable keyboard navigation(left and right keys are used if enabled)
            keyLeft: [37], // Left key code
            keyRight: [39] // Right key code
        },
        lang: { // Language variables for button
            next: 'Next',
            previous: 'Previous'
        },
        disabledSteps: [], // Array Steps disabled
        errorSteps: [], // Highlight step with errors
        hiddenSteps: [] // Hidden steps
    });
</script>
